.TH lpf 1
.SH NAME
lpf \- Build non-redistributable rpms

.SH SYNOPSIS
.B lpf <command> [options]

.SH DESCRIPTION
Builds and installs non-redistributable rpms by downloading binaries,
building and installing a local rpm.
.PP
lpf handles lpf packages named like lpf-spotify-client and target
packages which is spotify-client in this case. The lpf package is basically
just a thin recipe how to build the target package. Target packages are
by definition non-redistributable.

The basic usage is
.IP "" 4
$ lpf update
.PP
which will build and install any not yet installed target packages
corresponding to installed lpf packages. This also works to update
target packages to match updated lpf packages.
.PP
lpf packages are visible as an icon in the GUI. Clicking this icon is
the same as running 'lpf update' on the corresponding package.  The
lpf-gui GUI program  handles basic lpf operations: update,
view logs, check overall state and notifications management.
.PP
To run privileged operations lpf uses sudo(8). In order to use lpf, the
sudo configuration must allow current user to run commands as root, with
or without a password. See PRIVILEGED COMMANDS below.
.PP
If DISPLAY is defined in the environment, lpf uses GUI dialogs for user
interaction even when invoked from command line. To force CLI only
operation, unset DISPLAY.
.PP
lpf has a notification system for packages needing to be updated. See
NOTIFICATIONS below.
.SH COMMANDS
.TP
list:
list all installed lpf packages.
.TP
update [package]:
Interactive approve, build and install of given package or
all packages.
.TP
state [package]:
List package state or state of all packages.
.TP
scan [package]:
Triage a given package or all packages and update their status.
.TP
approve \<package\>:
Approve a package in state approve-wait.
.TP
build [package]:
Build given package or all packages in state build-wait
.TP
rebuild [package]:
Force re-install of a package where previous installation failed.
.TP
install <package>:
Install rpms for given package.
.TP
reset <package>
Remove all temporaty files for package, set state as after fresh install.
.TP
log [package]:
Display logs from last build for package, or just last build.
.TP
hide <package>
Disable notification messages for package as long as it stays in current
state.
.TP
notify [message]
Print given message or a default  one if there are lpf packages in need
of action - typically in need to be updated.
.TP
spec <package>:
Copy spec file for package to current directory.
.TP
srpm <package>:
Build a srpm file for package in current directory.
.TP
scan-removal <package>:
Triage package with the assumption that existing
target package is removed (use in spec scriptlets).

.SH PRIVILEGED COMMANDS
All builds run by lpf is using the pkg-build user which
owns the files under /var/lib/lpf. lpf uses sudo(8) to run as pkg-build
when building and to run as root when installing. lpf installs a sudo
config file  which allows users in the pkg-build group to make all required
operations.
.PP
One way to run lpf is to allow the running user to run commands as
root, with or without a password. Refer to the sudo(8) configuration
for this. With this configuration, running user will be added to the
pkg-build group.
.PP
Another way to allow current user to run lpf is to add running user to
the pkg-build group manually. Run
.IP "" 4
    $ su -c "usermod -a -G pkg-build $USER"
.PP
After this, log out and in again before proceeding.
.SH NOTIFICATIONS
lpf is capable of notifying user when lpf packages are in need of an update
e. g., when the lpf package has been updated. GUI notifications could
be enabled from the lpf-gui main window. This installs a daemon listening
to package state changes for current user, displaying gui messages as
appropriate.

Command line notifications could
be enabled by adding code to e. g., .bashlogin:
.IP "" 4
lpf notify
.IP "" 0
which will output a message similar to the well-known "You have mail" if lpf
packages needs to be updated.
.PP
Notifications could be blocked (a. k. a. "hidden") on a per-user basis. This
is done using the "hide" command or by marking the checkbox in the GUI
notification window.
.SH FILES
.TP
/etc/sudoers.d/pkg-build
Sudo configuration, allows users in pkg-build group to perform several
otherwise restricted operations.
.TP
/var/lib/lpf
Temporary files: logs, state, built rpm packages etc.
.TP
/usr/share/lpf/packages
Installed lpf packages data.
.TP
~/.config/autostart/lpf-notify.desktop
Daemon listening for package state change events.
Installed by the GUI when enabling notifications

.SH SEE ALSO
.TP
https://github.com/leamas/lpf
Source, FSM description, issue tracker, etc.
.TP
sudo(8)
